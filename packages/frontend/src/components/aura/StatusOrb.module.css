/* packages/frontend/src/components/aura/StatusOrb.module.css */

.statusOrb {
    width: 200px;
    height: 200px;
    position: relative;
    border-radius: 50%;
    --orb-color: 44, 62, 80;
    --glow-rgb: 77, 137, 255;
    background:
        radial-gradient(circle at 50% 35%, rgba(255, 255, 255, 0.5), transparent 20%),
        radial-gradient(ellipse at center, rgb(var(--orb-color)) 0%, #0a0d1a 100%);
    box-shadow:
        0 0 20px rgba(var(--glow-rgb), 0.3),
        0 0 40px rgba(var(--glow-rgb), 0.2),
        inset 0 0 15px rgba(0, 0, 0, 0.5);
    transition: background 0.5s ease, box-shadow 0.5s ease;
    will-change: transform, opacity, box-shadow;
}

.statusOrb::after {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 50%;
    background: radial-gradient(circle at 50% 120%, rgba(var(--glow-rgb), 0.4), transparent 70%);
    opacity: 0.8;
}

.orbBreathing {
    --orb-color: 44, 62, 80;
    --glow-rgb: 77, 137, 255;
    animation: breath 6s ease-in-out infinite;
}

.orbHeartbeat {
    --orb-color: 0, 255, 225;
    --glow-rgb: 0, 255, 225;
    animation: heartbeat 2s ease-in-out infinite;
    box-shadow:
        0 0 30px rgba(var(--glow-rgb), 0.7),
        0 0 60px rgba(var(--glow-rgb), 0.5),
        inset 0 0 20px rgba(0, 0, 0, 0.5);
}

.orbGlitch {
    --orb-color: 94, 40, 40;
    --glow-rgb: 255, 50, 50;
    animation: glitch 1.5s linear infinite;
    background: radial-gradient(ellipse at center, rgb(var(--orb-color)) 0%, #0a0d1a 100%);
    box-shadow:
        0 0 30px rgba(var(--glow-rgb), 0.7),
        0 0 60px rgba(var(--glow-rgb), 0.5);
}

@keyframes breath {
    0%,
    100% {
        transform: scale(0.98);
    }
    50% {
        transform: scale(1);
    }
}

@keyframes heartbeat {
    0%,
    100% {
        transform: scale(1);
        box-shadow:
            0 0 30px rgba(var(--glow-rgb), 0.6),
            0 0 60px rgba(var(--glow-rgb), 0.4),
            inset 0 0 20px rgba(0, 0, 0, 0.5);
    }
    50% {
        transform: scale(1.02);
        box-shadow:
            0 0 40px rgba(var(--glow-rgb), 0.9),
            0 0 80px rgba(var(--glow-rgb), 0.6),
            inset 0 0 20px rgba(0, 0, 0, 0.5);
    }
}

@keyframes glitch {
    0%,
    100% {
        transform: translate(0, 0);
        opacity: 1;
    }
    10% {
        transform: translate(-2px, 2px);
    }
    20% {
        transform: translate(2px, -2px);
    }
    30% {
        transform: translate(-2px, -2px);
        opacity: 0.8;
    }
    40% {
        transform: translate(2px, 2px);
    }
    50% {
        transform: translate(0, 0);
        opacity: 1;
    }
}

.mode-continuous {
    --glow-rgb: 0, 229, 255; /* Turkuaz */
}

.mode-oscillation {
    --glow-rgb: 212, 87, 255; /* Mor */
}

/* Reçete ve Protokol Modları Rengi (Altın/Sarı) */
.mode-protocols,
.mode-recipes,
.mode-recipe {
    --glow-rgb: 255, 215, 0; /* Altın/Sarı */
}

